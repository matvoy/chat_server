syntax = "proto3";

package webitel.chat.server; 

import "entity.proto";

service ChatService {
  // rpc ProcessMessage(ProcessMessageRequest) returns (ProcessMessageResponse) {}
  
  // 
  
  // rpc SaveMessageFromFlow(SaveMessageFromFlowRequest) returns (SaveMessageFromFlowResponse) {}

  rpc SendMessage(SendMessageRequest) returns (SendMessageResponse) {}
  rpc StartConversation(StartConversationRequest) returns (StartConversationResponse) {}
  rpc CloseConversation(CloseConversationRequest) returns (CloseConversationResponse) {}
  rpc JoinConversation(JoinConversationRequest) returns (JoinConversationResponse) {}
  rpc LeaveConversation(LeaveConversationRequest) returns (LeaveConversationResponse) {}
  rpc InviteToConversation(InviteToConversationRequest) returns (InviteToConversationResponse) {}
  rpc DeclineInvitation(DeclineInvitationRequest) returns (DeclineInvitationResponse) {}

  rpc GetConversationByID(GetConversationByIDRequest) returns (GetConversationByIDResponse) {}
  rpc GetProfiles(GetProfilesRequest) returns (GetProfilesResponse) {} 
  rpc GetProfileByID(GetProfileByIDRequest) returns (GetProfileByIDResponse) {}

  rpc CheckSession(CheckSessionRequest) returns (CheckSessionResponse) {}
}

message CheckSessionRequest {
  string external_id = 1;
  int64 profile_id = 2;
  string username = 3;
}

message CheckSessionResponse {
  bool exists = 1;
  int64 channel_id = 2;
  int64 client_id = 3;
}

message User {
  int64 user_id = 1;
  string type = 2;
  string connection = 3;
  bool internal = 4;
}

message SendMessageRequest {
  // User from = 1;
  entity.Message message = 1;
  int64 channel_id = 2;
  bool from_flow = 3;
  int64 conversation_id = 4;
}

message SendMessageResponse {
}

message StartConversationRequest {
  User user = 1;
  int64 domain_id = 2;
}
message StartConversationResponse {
  int64 conversation_id = 1;
  int64 channel_id = 2;
}

message CloseConversationRequest {
  int64 conversation_id = 1;
}

message CloseConversationResponse {
}

message JoinConversationRequest {
  int64 invite_id = 1;
  // User user = 1;
  // int64 conversation_id = 2;
}
message JoinConversationResponse {
  int64 channel_id = 1;
}

message LeaveConversationRequest {
  int64 channel_id = 1;
  int64 conversation_id = 2;
}
message LeaveConversationResponse {
}

message InviteToConversationRequest {
  User user = 1;
  int64 conversation_id = 2;
}
message InviteToConversationResponse {
  int64 invite_id = 1;
}

message DeclineInvitationRequest {
  int64 invite_id = 1;
}
message DeclineInvitationResponse {
}

message GetConversationByIDRequest {
  int64 conversation_id = 1;
}

message GetConversationByIDResponse {
  int64 id = 1;
  int64 domain_id = 2;
  string title = 3;
}

message Profile {
  int64 id = 1;
  string name = 2;
  string type = 3;
  int64 domain_id = 4;
  map<string, string>  variables = 5;
}

message GetProfilesRequest {
  string type = 1;
}

message GetProfilesResponse {
  repeated entity.Profile profiles = 1;
}

message GetProfileByIDRequest {
  int64 profile_id = 1;
}

message GetProfileByIDResponse {
  entity.Profile profile = 1;
}

// message SaveMessageFromFlowRequest {
//     int64 conversation_id = 1;
//     entity.Message message = 2;
// }

// message SaveMessageFromFlowResponse {
//     entity.Error error = 1;
// }

// message ProcessMessageRequest {
//   string external_user_id = 1;
//   string session_id = 2;
//   string username = 3;
//   string first_name = 4;
//   string last_name = 5;
//   string text = 6;
//   int64 profile_id = 7;
//   string number = 8;
// }

// message ProcessMessageResponse {
//   bool created = 1;
//   int64 conversation_id = 2;
// }