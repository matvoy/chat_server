syntax = "proto3";

package webitel.chat.flowclient;

import "entity.proto";

service FlowClientService {
    rpc SendMessage(SendMessageRequest) returns (SendMessageResponse) {}
    rpc WaitMessage(WaitMessageRequest) returns (WaitMessageResponse) {}
    rpc CloseConversation(CloseConversationRequest) returns (CloseConversationResponse) {}
}

message SendMessageRequest {
    int64 conversation_id = 1;
    entity.Message messages = 2;
}

message SendMessageResponse {
    entity.Error error = 1;
}

message WaitMessageRequest {
    int64 conversation_id = 1;
    string confirmation_id = 2;
}

message WaitMessageResponse {
    int64 timeout_sec = 1;
    repeated entity.Message messages = 2;
    entity.Error error = 3;
}

message CloseConversationRequest {
    int64 conversation_id = 1;
    string cause = 2;
}

message CloseConversationResponse {
    entity.Error error = 1;
}

service FlowAdapterService {
    rpc Init(InitRequest) returns (InitResponse) {}
    rpc SendMessageToFlow(SendMessageToFlowRequest) returns (SendMessageToFlowResponse) {}
}

message InitRequest {
    int64 conversation_id = 1;
    int64 profile_id = 2;
    int64 domain_id = 3;
    entity.Message message = 4;
    map<string, string>  variables = 5;
}

message InitResponse {
    entity.Error error = 1;
}

message SendMessageToFlowRequest {
    int64 conversation_id = 1;
    entity.Message message = 2;
}

message SendMessageToFlowResponse {
    entity.Error error = 1;
}